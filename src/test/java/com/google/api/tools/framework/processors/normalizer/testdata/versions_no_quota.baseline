name: "test.googleapis.com"
title: "test"
apis {
  name: "proto.test.v1.TestService"
  methods {
    name: "Call"
    request_type_url: "type.googleapis.com/proto.test.v1.In"
    response_type_url: "type.googleapis.com/proto.test.v1.Out"
    options {
      name: "google.api.http"
      value {
        type_url: "type.googleapis.com/google.api.HttpRule"
        value: "\022\r/v1beta2/test"
      }
    }
  }
  version: "v1"
  source_context {
    file_name: "versions_api1.proto"
  }
  syntax: SYNTAX_PROTO3
}
apis {
  name: "google.discovery.Discovery"
  methods {
    name: "GetDiscovery"
    request_type_url: "type.googleapis.com/google.discovery.GetDiscoveryRequest"
    response_type_url: "type.googleapis.com/google.protobuf.Any"
  }
  methods {
    name: "GetDiscoveryRest"
    request_type_url: "type.googleapis.com/google.discovery.GetDiscoveryRequest"
    response_type_url: "type.googleapis.com/google.protobuf.Struct"
  }
  version: "v1"
  source_context {
    file_name: "versions_discovery.proto"
  }
  syntax: SYNTAX_PROTO3
}
types {
  name: "proto.test.v1.In"
  fields {
    kind: TYPE_STRING
    cardinality: CARDINALITY_OPTIONAL
    number: 1
    name: "some"
    json_name: "some"
  }
  source_context {
    file_name: "versions_api1.proto"
  }
  syntax: SYNTAX_PROTO3
}
types {
  name: "proto.test.v1.Out"
  fields {
    kind: TYPE_STRING
    cardinality: CARDINALITY_OPTIONAL
    number: 1
    name: "other"
    json_name: "other"
  }
  source_context {
    file_name: "versions_api1.proto"
  }
  syntax: SYNTAX_PROTO3
}
types {
  name: "google.protobuf.Any"
  fields {
    kind: TYPE_STRING
    cardinality: CARDINALITY_OPTIONAL
    number: 1
    name: "type_url"
    options {
      name: "google.protobuf.FieldOptions.ctype"
      value {
        type_url: "type.googleapis.com/google.protobuf.StringValue"
        value: "\n\fSTRING_PIECE"
      }
    }
    json_name: "typeUrl"
  }
  fields {
    kind: TYPE_BYTES
    cardinality: CARDINALITY_OPTIONAL
    number: 2
    name: "value"
    options {
      name: "google.protobuf.FieldOptions.ctype"
      value {
        type_url: "type.googleapis.com/google.protobuf.StringValue"
        value: "\n\004CORD"
      }
    }
    json_name: "value"
  }
  source_context {
    file_name: "google/protobuf/any.proto"
  }
  syntax: SYNTAX_PROTO3
}
types {
  name: "google.protobuf.Struct"
  fields {
    kind: TYPE_MESSAGE
    cardinality: CARDINALITY_REPEATED
    number: 1
    name: "fields"
    type_url: "type.googleapis.com/google.protobuf.Struct.FieldsEntry"
    json_name: "fields"
  }
  source_context {
    file_name: "google/protobuf/struct.proto"
  }
  syntax: SYNTAX_PROTO3
}
types {
  name: "google.protobuf.Struct.FieldsEntry"
  fields {
    kind: TYPE_STRING
    cardinality: CARDINALITY_OPTIONAL
    number: 1
    name: "key"
    json_name: "key"
  }
  fields {
    kind: TYPE_MESSAGE
    cardinality: CARDINALITY_OPTIONAL
    number: 2
    name: "value"
    type_url: "type.googleapis.com/google.protobuf.Value"
    json_name: "value"
  }
  options {
    name: "google.protobuf.MessageOptions.map_entry"
    value {
      type_url: "type.googleapis.com/google.protobuf.BoolValue"
      value: "\b\001"
    }
  }
  source_context {
    file_name: "google/protobuf/struct.proto"
  }
  syntax: SYNTAX_PROTO3
}
types {
  name: "google.protobuf.Value"
  fields {
    kind: TYPE_ENUM
    cardinality: CARDINALITY_OPTIONAL
    number: 1
    name: "null_value"
    type_url: "type.googleapis.com/google.protobuf.NullValue"
    oneof_index: 1
    json_name: "nullValue"
  }
  fields {
    kind: TYPE_DOUBLE
    cardinality: CARDINALITY_OPTIONAL
    number: 2
    name: "number_value"
    oneof_index: 1
    json_name: "numberValue"
  }
  fields {
    kind: TYPE_STRING
    cardinality: CARDINALITY_OPTIONAL
    number: 3
    name: "string_value"
    oneof_index: 1
    json_name: "stringValue"
  }
  fields {
    kind: TYPE_BOOL
    cardinality: CARDINALITY_OPTIONAL
    number: 4
    name: "bool_value"
    oneof_index: 1
    json_name: "boolValue"
  }
  fields {
    kind: TYPE_MESSAGE
    cardinality: CARDINALITY_OPTIONAL
    number: 5
    name: "struct_value"
    type_url: "type.googleapis.com/google.protobuf.Struct"
    oneof_index: 1
    json_name: "structValue"
  }
  fields {
    kind: TYPE_MESSAGE
    cardinality: CARDINALITY_OPTIONAL
    number: 6
    name: "list_value"
    type_url: "type.googleapis.com/google.protobuf.ListValue"
    oneof_index: 1
    json_name: "listValue"
  }
  oneofs: "kind"
  source_context {
    file_name: "google/protobuf/struct.proto"
  }
  syntax: SYNTAX_PROTO3
}
types {
  name: "google.protobuf.ListValue"
  fields {
    kind: TYPE_MESSAGE
    cardinality: CARDINALITY_REPEATED
    number: 1
    name: "values"
    type_url: "type.googleapis.com/google.protobuf.Value"
    json_name: "values"
  }
  source_context {
    file_name: "google/protobuf/struct.proto"
  }
  syntax: SYNTAX_PROTO3
}
types {
  name: "google.discovery.GetDiscoveryRequest"
  fields {
    kind: TYPE_STRING
    cardinality: CARDINALITY_OPTIONAL
    number: 1
    name: "format"
    json_name: "format"
  }
  fields {
    kind: TYPE_STRING
    cardinality: CARDINALITY_REPEATED
    number: 2
    name: "labels"
    json_name: "labels"
  }
  fields {
    kind: TYPE_STRING
    cardinality: CARDINALITY_REPEATED
    number: 3
    name: "args"
    json_name: "args"
  }
  source_context {
    file_name: "versions_discovery.proto"
  }
  syntax: SYNTAX_PROTO3
}
enums {
  name: "google.protobuf.NullValue"
  enumvalue {
    name: "NULL_VALUE"
  }
  source_context {
    file_name: "google/protobuf/struct.proto"
  }
  syntax: SYNTAX_PROTO3
}
documentation {
  rules {
    selector: "proto.test.v1.TestService.Call"
    description: "Call v1beta2"
  }
  rules {
    selector: "google.discovery.Discovery"
    description: "A dummy discovery service for testing purpose"
  }
  rules {
    selector: "google.discovery.Discovery.GetDiscovery"
    description: "GetDiscovery."
  }
  rules {
    selector: "google.discovery.Discovery.GetDiscoveryRest"
    description: "GetDiscoveryRest."
  }
}
http {
  rules {
    selector: "proto.test.v1.TestService.Call"
    get: "/v1beta2/test"
  }
  rules {
    selector: "google.discovery.Discovery.GetDiscovery"
    get: "/$discovery"
  }
  rules {
    selector: "google.discovery.Discovery.GetDiscoveryRest"
    get: "/$discovery/{format}/rest"
    additional_bindings {
      get: "/$discovery/{format}"
    }
  }
}
context {
  rules {
    selector: "google.discovery.Discovery.GetDiscovery"
    requested: "google.rpc.context.VisibilityContext"
  }
  rules {
    selector: "google.discovery.Discovery.GetDiscoveryRest"
    requested: "google.rpc.context.VisibilityContext"
  }
}
endpoints {
  name: "test.googleapis.com"
  aliases: "test.clients6.google.com"
  aliases: "content-test.googleapis.com"
  apis: "proto.test.v1.TestService"
  apis: "google.discovery.Discovery"
}
config_version {
  value: 2
}
control {
  environment: "servicecontrol.googleapis.com"
}
metrics {
  name: "google.discovery.Discovery/RequestQuota"
  metric_kind: DELTA
  value_type: INT64
}
